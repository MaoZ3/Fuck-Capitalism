[gd_scene load_steps=11 format=3 uid="uid://bmvtluk2rwuin"]

[ext_resource type="PackedScene" uid="uid://cep4sirsi5ehr" path="res://wig.tscn" id="1_vxiru"]
[ext_resource type="PackedScene" uid="uid://mn34e5oqowro" path="res://motomami.tscn" id="2_w4str"]
[ext_resource type="PackedScene" uid="uid://bxb41cnpmlpo7" path="res://estado.tscn" id="3_03f31"]
[ext_resource type="PackedScene" uid="uid://cpsmkfbuvnwna" path="res://endwordl.tscn" id="4_jr8b4"]
[ext_resource type="Texture2D" uid="uid://dydlq7hila3bq" path="res://back.jpg" id="5_3eor4"]

[sub_resource type="GDScript" id="GDScript_fxg83"]
script/source = "extends Node

@export var estado = preload(\"res://estado.tscn\")

var screen_size
# Called when the node enters the scene tree for the first time.
func _ready():
	#screen_size = get_viewport_rect().size
	new_game()
	
func new_game():
	$Wig.start($StartPosition.position)
	$StartTimer.start()
	
# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass

func _on_start_timer_timeout():
	$estadoTimer.start()

func _on_estado_timer_timeout():
		# Create a new instance of the Mob scene.
	var estado = preload(\"res://estado.tscn\").instantiate()	

	# Choose a random location on Path2D.
	var est_spawn_location = $Path2D/PathFollow2D
	est_spawn_location.progress_ratio = randf()

	# Set the mob's direction perpendicular to the path direction.
	var direction = est_spawn_location.rotation + PI / 2

	# Set the mob's position to a random location.
	estado.position = est_spawn_location.position

	# Add some randomness to the direction.
	direction += randf_range(-PI / 4, PI / 4)
	estado.rotation = direction

	# Choose the velocity for the mob.
	var velocity = Vector2(randf_range(150.0, 250.0), 0.0)
	estado.linear_velocity = velocity.rotated(direction)

	# Spawn the mob by adding it to the Main scene.
	add_child(estado)
	
"

[sub_resource type="GDScript" id="GDScript_llgsy"]
script/source = "extends Area2D

@onready var timer = $Timer


func _on_area_entered(area):
	print(\"aqui\")
	$Timer


\"\"\"func _on_body_entered(body):
	print(\"aqui\")
	pass # Replace with function body.\"\"\"
"

[sub_resource type="WorldBoundaryShape2D" id="WorldBoundaryShape2D_pgskj"]

[sub_resource type="Curve2D" id="Curve2D_d61g4"]
_data = {
"points": PackedVector2Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 477, 3, 0, 0, 0, 0, 486, 725, 0, 0, 0, 0, -4, 724, 0, 0, 0, 0, 0, 0)
}
point_count = 5

[sub_resource type="CircleShape2D" id="CircleShape2D_y0emt"]
radius = 8.52436

[node name="Argentina" type="Node"]
script = SubResource("GDScript_fxg83")

[node name="Back" type="Sprite2D" parent="."]
show_behind_parent = true
texture_filter = 1
position = Vector2(242, 372)
texture = ExtResource("5_3eor4")

[node name="Wig" parent="." instance=ExtResource("1_vxiru")]
position = Vector2(357, 270)

[node name="Area2D" parent="Wig" instance=ExtResource("2_w4str")]

[node name="limitwordl" parent="." instance=ExtResource("4_jr8b4")]
position = Vector2(226, 726)
script = SubResource("GDScript_llgsy")
metadata/_edit_group_ = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="limitwordl"]
shape = SubResource("WorldBoundaryShape2D_pgskj")

[node name="Path2D" type="Path2D" parent="."]
curve = SubResource("Curve2D_d61g4")

[node name="PathFollow2D" type="PathFollow2D" parent="Path2D"]
rotation = 0.00628923

[node name="estadoTimer" type="Timer" parent="."]
wait_time = 0.5

[node name="StartTimer" type="Timer" parent="."]
wait_time = 2.0
one_shot = true

[node name="StartPosition" type="Marker2D" parent="."]
position = Vector2(240, 450)

[node name="estado" parent="." instance=ExtResource("3_03f31")]
position = Vector2(325, 226)
scale = Vector2(0.943636, 1.12446)

[node name="CollisionShape2D" type="CollisionShape2D" parent="estado"]
shape = SubResource("CircleShape2D_y0emt")

[connection signal="area_entered" from="limitwordl" to="limitwordl" method="_on_area_entered"]
[connection signal="body_entered" from="limitwordl" to="limitwordl" method="_on_body_entered"]
[connection signal="timeout" from="estadoTimer" to="." method="_on_estado_timer_timeout"]
[connection signal="timeout" from="StartTimer" to="." method="_on_start_timer_timeout"]
